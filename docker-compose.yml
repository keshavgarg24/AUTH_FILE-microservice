version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:5.0
    container_name: microservices-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - microservices-network

  # Auth Service
  auth-service:
    build: 
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongo:27017/auth_service?authSource=admin
      - JWT_SECRET=development-jwt-secret-change-in-production
      - BCRYPT_ROUNDS=10
      - LOG_LEVEL=info
    depends_on:
      - mongo
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # File Service
  file-service:
    build: 
      context: ./file-service
      dockerfile: Dockerfile
    container_name: file-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=mongodb://admin:password123@mongo:27017/file_service?authSource=admin
      - JWT_SECRET=development-jwt-secret-change-in-production
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - MAX_FILE_SIZE=52428800
      - LOG_LEVEL=info
    depends_on:
      - mongo
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # User UI Service
  user-ui:
    build: 
      context: ./user-ui
      dockerfile: Dockerfile
    container_name: user-ui
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - FILE_SERVICE_URL=http://file-service:3002
      - SESSION_SECRET=development-session-secret
    depends_on:
      - auth-service
      - file-service
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Load Balancer (Optional)
  nginx:
    image: nginx:alpine
    container_name: microservices-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - auth-service
      - file-service
      - user-ui
    networks:
      - microservices-network

volumes:
  mongo_data:
    driver: local

networks:
  microservices-network:
    driver: bridge